plugins {
    id 'java'
    id 'fabric-loom' version '0.11.32'
    id 'maven-publish'
    id "com.diffplug.spotless" version "5.12.4"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

def ENV = System.getenv()

archivesBaseName = project.archives_base_name
version = project.mod_version + (ENV.GITHUB_ACTIONS ? "" : "+local")
group = project.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name "RoughlyEnoughItems"
        url "https://maven.shedaniel.me/"
        content {
            includeGroup "me.shedaniel"
            includeGroup "me.shedaniel.cloth"
            includeGroup "dev.architectury"
        }
    }
    maven {
        name "Waila"
        url "https://maven.bai.lol"
        content {
            includeGroup "mcp.mobius.waila"
        }
    }
    maven {
        url "https://maven.parchmentmc.net/"
        content {
            includeGroup "org.parchmentmc.data"
        }
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

loom {
    runtimeOnlyLog4j = true
}

java {
    withSourcesJar()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.18.1:${project.parchment_version}@zip")
    }

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(modApi("teamreborn:energy:${project.tr_energy_version}")) {
        transitive = false
    }

    modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    modCompileOnly("mcp.mobius.waila:wthit-api:fabric-${project.wthit_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modRuntimeOnly("mcp.mobius.waila:wthit:fabric-${project.wthit_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    include modImplementation("teamreborn:energy:${project.tr_energy_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    optionalDependency "TechReborn:TechReborn-1.18:${project.tech_reborn_version}"

    modImplementation("appeng:appliedenergistics2-fabric:${project.ae_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
}

def optionalDependency(String dep) {
    dependencies.modLocalRuntime(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
    dependencies.modCompileOnly(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
}

def disabledOptionalDependency(String dep) {
    dependencies.modCompileOnly(dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "nbt-crafting"
    }
}

jar {
    exclude "**/*.xcf"
    from("LICENSE.md") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
